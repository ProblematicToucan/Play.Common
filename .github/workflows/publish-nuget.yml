# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: .NET

on:
  push:
    branches: [ "master" ]
    tags: -'v*'
  pull_request:
    branches: [ "master" ]
    tags: -'v*'
  workflow_dispatch:
    inputs:
      tags:
        description: 'Comma-separated list of tags'
        required: false
        default: 'latest'

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v3
      
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '5.0.x'
        
    - name: Restore dependencies
      run: dotnet restore ./test/Play.Common.Tests/Play.Common.Tests.csproj
      
    - name: Build
      run: dotnet build ./test/Play.Common.Tests/Play.Common.Tests.csproj --no-restore
      
    - name: Test
      run: dotnet test ./test/Play.Common.Tests/Play.Common.Tests.csproj --no-build --verbosity normal
      
  deploy:
  
    runs-on: ubuntu-latest
    needs: build
    
    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
          ref: ${{ github.head_ref }}   # checkout the correct branch name
          fetch-depth: 0                # fetch the whole repo history
      
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '5.0.x'
        
    - name: Git Version
      id: version
      uses: codacy/git-version@2.4.0
      
    - name: Create Release
      uses: actions/create-release@v1
      with:
        tag_name: v${{ steps.version.outputs.version }}
        release_name: Release ${{ steps.version.outputs.version }}
        body: |
          Release ${{ steps.version.outputs.version }}
        draft: false
        prerelease: false
             
    - name: Build
      run: dotnet build ./src/Play.Common/Play.Common.csproj
      
    - name: Create the package
      run: dotnet pack ./src/Play.Common/Play.Common.csproj -c Release -p:PackageVersion=${{ steps.version.outputs.version }}
      
    - name: Publish the package to GPR
      run: |
          dotnet nuget add source --username USERNAME --password ${{ secrets.GITHUB_TOKEN  }} --store-password-in-clear-text --name github "https://nuget.pkg.github.com/ProblematicToucan/index.json"
          dotnet nuget push ./src/Play.Common/bin/Release/*.nupkg --api-key ${{secrets.GPR_GITHUB_TOKEN}} --source "github"
      
